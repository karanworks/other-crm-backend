// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String
  email    String @unique
  password String
  token    Int      @default(0)
  clients Client[]
  dropdowns Dropdown[]
  invoices Invoice[]
  payments Payment[]
  users   Json?
  roleId Int
  adminId Int?
  isActive Int      @default(0)
  branch String?
  userIp   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Menu{
  id Int @id @default(autoincrement())
  menuLableId String
  label String
  icon String
  link String
  status Int
  sequence Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
 
}

model SubMenu {
  id Int @id @default(autoincrement())
  submenuLableId String
  label String
  parentId String
  link String
  status Int
  menuId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
}

model SubMenuAssign{
  id Int @id @default(autoincrement())
  menuId Int
  status Int
  subMenuId Int
  roleId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Role {
  id Int @id @default(autoincrement())
  name String
  status Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model RoleAssign{
  id Int @id @default(autoincrement())
  roleId Int
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}



model Dropdown{
  id Int @id @default(autoincrement())
  dropdownName String?
  category String
  user User? @relation(fields: [addedBy], references: [id])
  addedBy Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}


model BranchDropdown{
  id Int @id @default(autoincrement())
  branchDropdownName String
  addedBy Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Invoice{
  id Int @id @default(autoincrement())
  clientName String 
  clientId Int
  taskId Int
  taskName String
  totalAmount String
  balance Int?
  paymentDueDate String
  payments Payment[]
  user User? @relation(fields: [addedBy], references: [id])
  addedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}


model Payment{
  id Int @id @default(autoincrement())
  invoiceId Int?
  invoice Invoice? @relation(fields: [invoiceId], references: [id])
  paymentAmount String
  paymentDate String
  user User? @relation(fields: [addedBy], references: [id])
  addedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Client {
  id Int @id @default(autoincrement())
  clientName String 
  mobileNo String @unique
  address String
  user User? @relation(fields: [addedBy], references: [id])
  addedBy Int
  status Int @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Task{
  id Int @id @default(autoincrement())
  task String
  projectGenre String
  projectStatus String
  projectDueDate DateTime
  youtubeLink String?
  description String
  status Int @default(1)
  addedBy Int
  clientId Int
  clientName String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}


model Event{
  id Int @id @default(autoincrement())
  clientId Int
  eventName String
  eventDate String
  taskId Int
  status Int? @default(1)
  addedBy Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}